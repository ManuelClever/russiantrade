{"ast":null,"code":"var _jsxFileName = \"/mnt/5ef62a2a-1eec-4bdc-ad7c-f8a7d48861b1/Nextcloud/Dokumente/Coding/Projects/www/russiantrade/src/main/webapp/webpage/src/App.tsx\";\nimport 'chart.js/auto';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  var config = {\n    type: \"bar\",\n    data: {\n      labels: ['January', 'February', 'March', 'April', 'May', 'June'],\n      datasets: [{\n        label: 'My First dataset',\n        backgroundColor: ['rgb(205,92,92)'],\n        borderColor: 'rgb(255, 99, 132)',\n        data: [2, 10, 5, 2, 20, 30, 45]\n      }]\n    },\n    options: {}\n  };\n  const styles = {\n    rebecca: {\n      backgroundColor: 'rebeccapurple'\n    },\n    hundred: {\n      height: '100%',\n      width: '100%'\n    },\n    hundredAuto: {\n      height: 'auto',\n      width: '100%'\n    },\n    burly: {\n      backgroundColor: 'burlywood'\n    },\n    text: {\n      textAlign: 'center'\n    }\n  };\n  return (\n    /*#__PURE__*/\n    // <div>\n    //   <Test/>\n    //   <Doughnut type={config.type} data={config.data}/>\n    // </div>\n    // <!-- options need to be in one row each, else selector doesn't work-->\n    // <!--Panzoom https://timmywil.com/panzoom/-->\n    // <!--https://commons.wikimedia.org/wiki/File_talk:BlankMap-World.svg/Documentation#Territories_included-->\n    // <!--<?xml version=\"1.0\" encoding=\"UTF-8\"?>-->\n    _jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row \",\n        style: {\n          height: '50px'\n        },\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row specific-pie\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            id: \"navIMG\",\n            src: require(\"./temp/bar.jpg\").default\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 5\n    }, this)\n  );\n}\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/mnt/5ef62a2a-1eec-4bdc-ad7c-f8a7d48861b1/Nextcloud/Dokumente/Coding/Projects/www/russiantrade/src/main/webapp/webpage/src/App.tsx"],"names":["App","config","type","data","labels","datasets","label","backgroundColor","borderColor","options","styles","rebecca","hundred","height","width","hundredAuto","burly","text","textAlign","require","default"],"mappings":";AACA,OAAO,eAAP;;;AAiBA,SAASA,GAAT,GAAwB;AAEtB,MAAIC,MAA0B,GAAG;AAC/BC,IAAAA,IAAI,EAAE,KADyB;AAE/BC,IAAAA,IAAI,EAAE;AACJC,MAAAA,MAAM,EAAE,CACN,SADM,EAEN,UAFM,EAGN,OAHM,EAIN,OAJM,EAKN,KALM,EAMN,MANM,CADJ;AAQJC,MAAAA,QAAQ,EAAE,CACN;AACIC,QAAAA,KAAK,EAAE,kBADX;AAEIC,QAAAA,eAAe,EAAE,CAAC,gBAAD,CAFrB;AAGIC,QAAAA,WAAW,EAAE,mBAHjB;AAIIL,QAAAA,IAAI,EAAE,CAAC,CAAD,EAAI,EAAJ,EAAQ,CAAR,EAAW,CAAX,EAAc,EAAd,EAAkB,EAAlB,EAAsB,EAAtB;AAJV,OADM;AARN,KAFyB;AAmB/BM,IAAAA,OAAO,EAAE;AAnBsB,GAAjC;AAsBA,QAAMC,MAAM,GAAG;AACbC,IAAAA,OAAO,EAAE;AACPJ,MAAAA,eAAe,EAAE;AADV,KADI;AAIbK,IAAAA,OAAO,EAAE;AACLC,MAAAA,MAAM,EAAE,MADH;AAELC,MAAAA,KAAK,EAAE;AAFF,KAJI;AAQbC,IAAAA,WAAW,EAAE;AACTF,MAAAA,MAAM,EAAE,MADC;AAETC,MAAAA,KAAK,EAAE;AAFE,KARA;AAYbE,IAAAA,KAAK,EAAE;AACHT,MAAAA,eAAe,EAAE;AADd,KAZM;AAebU,IAAAA,IAAI,EAAE;AACFC,MAAAA,SAAS,EAAE;AADT;AAfO,GAAf;AAoBA;AAAA;AACE;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAAA,8BACI;AAAK,QAAA,SAAS,EAAC,MAAf;AAAsB,QAAA,KAAK,EAAE;AAACL,UAAAA,MAAM,EAAE;AAAT,SAA7B;AAAA,+BACQ;AAAK,UAAA,SAAS,EAAC;AAAf;AAAA;AAAA;AAAA;AAAA;AADR;AAAA;AAAA;AAAA;AAAA,cADJ,eAKQ;AAAK,QAAA,SAAS,EAAC,kBAAf;AAAA,+BACI;AAAK,UAAA,SAAS,EAAC,KAAf;AAAA,iCACI;AAAK,YAAA,EAAE,EAAC,QAAR;AAAiB,YAAA,GAAG,EAAEM,OAAO,CAAC,gBAAD,CAAP,CAA0BC;AAAhD;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cALR;AAAA;AAAA;AAAA;AAAA;AAAA;AAVF;AAyBD;;KArEQpB,G;AAuET,eAAeA,GAAf","sourcesContent":["import { ChartConfiguration, ChartType, ChartData, ChartOptions } from 'chart.js';\nimport 'chart.js/auto';\n\nimport WorldMap from './temp/worldMap';\nimport Dropdown from './components/Dropdown';\n\nimport ua_flag from \"./temp/flag_ukraine.png\";\nimport img_bar from \"./temp/bar.png\";\nimport img_pie from \"./temp/pie.png\";\n\nexport interface myCustomChartConfig {\n  type: ChartType,\n  data: ChartData,\n  options?: ChartOptions\n  width?: number,\n  height?: number\n}\n\nfunction App(this: any) {\n\n  var config: ChartConfiguration = {\n    type: \"bar\",\n    data: {\n      labels: [\n        'January',\n        'February',\n        'March',\n        'April',\n        'May',\n        'June'],\n      datasets: [\n          {\n              label: 'My First dataset',\n              backgroundColor: ['rgb(205,92,92)'],\n              borderColor: 'rgb(255, 99, 132)',\n              data: [2, 10, 5, 2, 20, 30, 45] \n          }\n      ]\n    },\n    options: {},\n  }\n\n  const styles = {\n    rebecca: {\n      backgroundColor: 'rebeccapurple'\n    },\n    hundred: {\n        height: '100%',\n        width: '100%'\n    },\n    hundredAuto: {\n        height: 'auto',\n        width: '100%'\n    },\n    burly: {\n        backgroundColor: 'burlywood'\n    },\n    text: {\n        textAlign: 'center'\n    }\n  };\n\n  return (\n    // <div>\n    //   <Test/>\n    //   <Doughnut type={config.type} data={config.data}/>\n    // </div>\n    // <!-- options need to be in one row each, else selector doesn't work-->\n\n    // <!--Panzoom https://timmywil.com/panzoom/-->\n    // <!--https://commons.wikimedia.org/wiki/File_talk:BlankMap-World.svg/Documentation#Territories_included-->\n    // <!--<?xml version=\"1.0\" encoding=\"UTF-8\"?>-->\n    <div>\n        <div className=\"row \" style={{height: '50px'}}>\n                <div className=\"col\">\n                </div>\n            </div>\n            <div className=\"row specific-pie\">\n                <div className=\"col\">\n                    <img id=\"navIMG\" src={require(\"./temp/bar.jpg\").default}/>\n                </div>\n            </div>\n            \n    </div>\n\n    \n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}